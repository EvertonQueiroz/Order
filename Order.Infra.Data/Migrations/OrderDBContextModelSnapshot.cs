// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Order.Infra.Data.Context;

namespace Order.Infra.Data.Migrations
{
    [DbContext(typeof(OrderDBContext))]
    partial class OrderDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Order.Domain.Order", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Number");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Order.Domain.OrderItem", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Description");

                    b.HasIndex("OrderNumber");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Order.Domain.OrderItem", b =>
                {
                    b.HasOne("Order.Domain.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Order.Domain.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
